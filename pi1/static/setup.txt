plugin.tx_sfbooks_pi1 = USER
plugin.tx_sfbooks_pi1 {
	templateFile = EXT:sf_books/books_template.html

	code =
	storagePid =
	recursive =

	listView {
		limit = 4
		maxPages =

		editpanel.wrap = <td>|</td>

		headers {
			category.wrap =
			cover.wrap =
			description.wrap =
			extras.wrap =
			infos.wrap =
			number.wrap = <span>|</span>
			serie.wrap =
			title.wrap =
			uid.wrap =
		}

		fields {
			category.wrap =
			cover.file.maxW = 200
			description.wrap =
			extras.wrap =
			infos.wrap =
			author {
				stdWrap.required = 1
				stdWrap.typolink {
					parameter.data = page:uid
					additionalParams.cObject = TEXT
					additionalParams.cObject {
						field = author
						wrap = &tx_sfbooks_pi1[sword]=|
					}
					useCacheHash = 1
					addQueryString = 1
					addQueryString.exclude = no_cache
				}
				stdWrap.wrap = <span>|</span>
			}
			number.wrap =
			serie.wrap =
			title {
				stdWrap.required = 1
				stdWrap.typolink {
					parameter.data = page:uid
					additionalParams.cObject = TEXT
					additionalParams.cObject {
						field = uid
						wrap = &tx_sfbooks_pi1[showUid]=|
					}
					useCacheHash = 1
					addQueryString = 1
					addQueryString.exclude = no_cache
				}
			}
			uid.wrap =
		}
	}

	singleView {
		backlink {
			parameter.data = page:uid
			useCacheHash = 0
			addQueryString = 1
			addQueryString.exclude = tx_sfbooks_pi1[showUid], cHash
		}

		fields {
			category.wrap =
			cover.file.maxW = 200
			description.parseFunc < tt_content.text.20.parseFunc
			extras {
				# wrap around list and continuous text
				wrap = <dl>|</dl>

				# wrap around the extras label
				label.wrap = <dt>|</dt>

				# if rendered as list
				list.wrap = <dd><ul>|</ul></dd>
				listitem.wrap = <li>|</li>

				# if renderes as contiuous text
				content.wrap = <dd>|</dd>
			}
			infos.wrap = <div>|</div>
			number.wrap =
			serie.wrap =
			title.wrap =
			uid.wrap =
			location1.noTrimWrap = |<b>###LABEL_LOCATION1###:</b> |<br/>|
		}
	}

	# Example of default set CSS styles (these go into the document header):
	_CSS_DEFAULT_STYLE (
		.tx-sfbooks-pi1 H2 { margin-top: 0px; margin-bottom: 0px; }
	)

	# Example of how to overrule LOCAL_LANG values for the plugin:
	_LOCAL_LANG.default {
		pi_list_searchBox_search = Search!

		# example for additional Items in location1
		label_location1 = Raum
		label_location1_I_0 =
		label_location1_I_3 = Raum 03

		label_location2_I_0 =
		label_location3_I_0 =
	}

	# Example of how to set default values from TS in the incoming array, $this->piVars of the plugin:
	#_DEFAULT_PI_VARS.test = test
}

# if sorting link or pagebrowser was used switch to USER_INT
[globalString: GP = tx_sfbooks_pi1|sort_field = /number|title/] || [globalString: GP = tx_sfbooks_pi1|pointer > 0]
page.200 = TEXT
page.200.value = <h1>sort or pointer</h1>
plugin.tx_sfbooks_pi1 = USER_INT
[end]

# even if sort- or pagebrowserparam are presend switch to USER if a book singleview was selected
[globalString: GP = tx_sfbooks_pi1|showUid > 0]
plugin.tx_sfbooks_pi1 = USER
[end]

plugin.tx_comments_pi1 {
	showUidMap.tx_sfbooks_pi1 = showUid
	prefixToTableMap.tx_sfbooks_pi1 = tx_sfbooks_books
}